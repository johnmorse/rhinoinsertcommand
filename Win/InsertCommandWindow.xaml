<Window x:Class="Insert.Win.InsertCommandWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:libconvert="clr-namespace:RhinoWindows.Converters;assembly=RhinoWindows"
        Title="Insert"
        Width="465" Height="422"
        MinWidth="465" MinHeight="385"
        ShowInTaskbar="False"
        WindowStartupLocation="CenterOwner"
        >
    <Window.Resources>
        <libconvert:EnumToBoolConverter x:Key="enumConverter" />
        <libconvert:DoubleConverter x:Key="DoubleColorConverter" />
        <libconvert:ImageConverter x:Key="ImageConverter" />
        <Style TargetType="TextBox" x:Key="NumberTextBoxStyle">
            <Setter Property="HorizontalContentAlignment" Value="Right"/>
        </Style>
        <Style TargetType="Label" x:Key="labelStyle">
            <Setter Property="Margin" Value="0,0,3,0"/>
            <Setter Property="Padding" Value="0"/>
        </Style>
    </Window.Resources>
    <Grid x:Name="LayoutRoot" Margin="6">
		<Grid.RowDefinitions>
			<RowDefinition Height="Auto"/>
			<RowDefinition Height="Auto"/>
			<RowDefinition Height="Auto"/>
			<RowDefinition Height="Auto"/>
			<RowDefinition/>
			<RowDefinition Height="Auto"/>
			<RowDefinition Height="Auto"/>
			<RowDefinition Height="Auto"/>
		</Grid.RowDefinitions>
		<Grid >
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="Auto"/>
				<ColumnDefinition/>
				<ColumnDefinition Width="Auto"/>
			</Grid.ColumnDefinitions>
			<Label Content="Name:" Margin="0,0,3,0" Padding="0" VerticalAlignment="Center" VerticalContentAlignment="Center"/>
			<ComboBox Name="nameComboBox"
                      Grid.Column="1" Margin="3,0" Height="24"
                      ItemsSource="{Binding Path=blockList}"
                      SelectedIndex="{Binding Path=blockListSelectedIndex}" />
            <Button Grid.Column="2" Margin="3,0,0,0" Height="{Binding ElementName=nameComboBox, Path=ActualHeight}" Width="{Binding ElementName=nameComboBox, Path=ActualHeight}"
                    Command="{Binding Path=BrowseForFileButtonClickDelegate}">
				<Image Source="/InsertWin;component/Resources/FileOpen.png" HorizontalAlignment="Center" VerticalAlignment="Center"/>
			</Button>
		</Grid>
        <Label Content="{Binding Path=linkDescription}" Margin="0,0,3,0" Padding="0" Grid.Row="1" Height="Auto"/>
        <Label Content="{Binding Path=url}" Margin="0,0,3,0" Grid.Row="2" Padding="0" Height="Auto"/>
        <Label Content="Description:" Margin="0" Grid.Row="3" Padding="0" Height="Auto"/>
		<TextBox Grid.Row="4" TextWrapping="Wrap" AcceptsReturn="True" MinHeight="30"
                 IsReadOnly="{Binding Path=blockDescriptionIsReadOnly}"
                 Text="{Binding Path=blockDescription}"/>
		<Grid Margin="0" Grid.Row="5" >
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="Auto"/>
				<ColumnDefinition/>
			</Grid.ColumnDefinitions>
			<GroupBox Name="groupBoxInsertAs" Header="Insert as" Margin="0" Height="75" Width="Auto">
				<Grid Height="Auto" Width="Auto">
					<Grid.RowDefinitions>
						<RowDefinition/>
						<RowDefinition/>
						<RowDefinition/>
					</Grid.RowDefinitions>
					<RadioButton Content="Block Instance" GroupName="insertAsRadioGroup"
                                 IsChecked="{Binding Path=InsertAs,
                                 Converter={StaticResource enumConverter},
                                 ConverterParameter=Block}"
                                 />
                    <RadioButton Content="As Group" Grid.Row="1" GroupName="insertAsRadioGroup"
                                 IsChecked="{Binding Path=InsertAs,
                                 Converter={StaticResource enumConverter},
                                 ConverterParameter=ObjectsInGroup}"
                                 />
                    <RadioButton Content="Individual Objects" Grid.Row="2" GroupName="insertAsRadioGroup"
                                 IsChecked="{Binding Path=InsertAs,
                                 Converter={StaticResource enumConverter},
                                 ConverterParameter=Objects}"
                                 />
				</Grid>
		    </GroupBox>
            <Border Grid.Column="1"
                    Margin="3,3,0,0"
                    BorderThickness="1"
                    BorderBrush="{x:Static SystemColors.ControlDarkBrush}"
                    Height="{Binding ElementName=groupBoxInsertAs, Path=ActualHeight}"
                    Width="125"
                    HorizontalAlignment="Left"
                    >
                <Image Margin="3"
                       Source="{Binding Path=PreviewBitmap, Converter={StaticResource ImageConverter}}"
                       Stretch="Uniform"
                       HorizontalAlignment="Center"
                       VerticalAlignment="Center"
                       >
                    <Image.ContextMenu>
                        <ContextMenu>
                            <MenuItem Header="Wireframe"
                                      IsCheckable="True"
                                      IsChecked="{Binding Path=isWireframeChecked}"/>
                            <MenuItem Header="Shaded"
                                      IsCheckable="True"
                                      IsChecked="{Binding Path=isShadedChecked}"/>
                            <MenuItem Header="Rendered"
                                      IsCheckable="True"
                                      IsChecked="{Binding Path=isRenderedChecked}"/>
                            <Separator/>
                            <MenuItem Header="Top"
                                      IsCheckable="True"
                                      IsChecked="{Binding Path=isTopChecked}"/>
                            <MenuItem Header="Bottom"
                                      IsCheckable="True"
                                      IsChecked="{Binding Path=isBottomChecked}"/>
                            <MenuItem Header="Left"
                                      IsCheckable="True"
                                      IsChecked="{Binding Path=isLeftChecked}"/>
                            <MenuItem Header="Right"
                                      IsCheckable="True"
                                      IsChecked="{Binding Path=isRightChecked}"/>
                            <MenuItem Header="Front"
                                      IsCheckable="True"
                                      IsChecked="{Binding Path=isFrontChecked}"/>
                            <MenuItem Header="Back"
                                      IsCheckable="True"
                                      IsChecked="{Binding Path=isBackChecked}"/>
                            <MenuItem Header="Perspective"
                                      IsCheckable="True"
                                      IsChecked="{Binding Path=isPerspectiveChecked}"/>
                        </ContextMenu>
                    </Image.ContextMenu>
                </Image>
            </Border>
        </Grid>
		<Grid Grid.Row="6" Margin="0" Height="Auto">
			<Grid.RowDefinitions>
				<RowDefinition Height="Auto"/>
				<RowDefinition Height="Auto"/>
				<RowDefinition Height="Auto"/>
				<RowDefinition Height="Auto"/>
				<RowDefinition Height="Auto"/>
				<RowDefinition Height="Auto"/>
			</Grid.RowDefinitions>
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="Auto"/>
				<ColumnDefinition/>
				<ColumnDefinition Width="Auto"/>
				<ColumnDefinition/>
				<ColumnDefinition Width="Auto"/>
				<ColumnDefinition/>
			</Grid.ColumnDefinitions>

            <Grid Margin="0,0,6,0" Grid.ColumnSpan="2">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <Label Content="Insertion point" Style="{StaticResource labelStyle}" />
                <Rectangle Grid.Column="1" Height="1" Margin="0" Stroke="{x:Static SystemColors.ControlDarkBrush}" VerticalAlignment="Center" />
            </Grid>
            <!--<Label Content="Insertion point" Grid.ColumnSpan="2" Margin="0" Padding="0,3"/>-->
			
            <CheckBox Content="Prompt" Margin="0" Padding="0" Grid.Row="1" Grid.ColumnSpan="2"
                      IsChecked="{Binding Path=promptInsertionPoint}"/>
			<Label Content="X:" Grid.Row="3" Margin="0,0,3,0" Padding="0"
                   IsEnabled="{Binding Path=enableInsertionPointControls}" />
            <TextBox Margin="3,3,20,3" Grid.Row="3" Grid.Column="1" Style="{StaticResource NumberTextBoxStyle}"
                     IsEnabled="{Binding Path=enableInsertionPointControls}"
                     Text="{Binding Path=insertionPointX, Converter={StaticResource DoubleColorConverter}}"
                     />
			<Label Content="Y:" Grid.Row="4" Margin="0,0,3,0" Padding="0"
                   IsEnabled="{Binding Path=enableInsertionPointControls}" />
            <TextBox Margin="3,3,20,3" Grid.Row="4" Grid.Column="1" Style="{StaticResource NumberTextBoxStyle}"
                     IsEnabled="{Binding Path=enableInsertionPointControls}"
                     Text="{Binding Path=insertionPointY, Converter={StaticResource DoubleColorConverter}}"
                     />
            <Label Content="Z:" Grid.Row="5" Margin="0,0,3,0" Padding="0"
                   IsEnabled="{Binding Path=enableInsertionPointControls}" />
            <TextBox Margin="3,3,20,3" Grid.Row="5" Grid.Column="1" Style="{StaticResource NumberTextBoxStyle}"
                     IsEnabled="{Binding Path=enableInsertionPointControls}"
                     Text="{Binding Path=insertionPointZ, Converter={StaticResource DoubleColorConverter}}"
                     />

            <Grid Margin="0,0,6,0" Grid.Column="2" Grid.ColumnSpan="2">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <Label Content="Scale" Style="{StaticResource labelStyle}" />
                <Rectangle Grid.Column="1" Height="1" Margin="0" Stroke="{x:Static SystemColors.ControlDarkBrush}" VerticalAlignment="Center" />
            </Grid>
			<CheckBox Content="Prompt" Margin="0" Padding="0" Grid.Row="1" Grid.Column="2" Grid.ColumnSpan="2"
                      IsChecked="{Binding Path=promptScale}"/>
			<CheckBox Content="Uniform" Margin="0" Padding="0" Grid.Row="2" Grid.Column="2" Grid.ColumnSpan="2"
                      IsEnabled="{Binding Path=enableScaleXControls}"
                      IsChecked="{Binding Path=uniformlyScale}"/>
			<Label Content="X:" Grid.Column="2" Grid.Row="3" Margin="0,0,3,0" Padding="0"
                   IsEnabled="{Binding Path=enableScaleXControls}"/>
            <TextBox Margin="3,3,20,3" Grid.Row="3" Grid.Column="3" Style="{StaticResource NumberTextBoxStyle}"
                     IsEnabled="{Binding Path=enableScaleXControls}"
                     Text="{Binding Path=scaleX, Converter={StaticResource DoubleColorConverter}}"/>
			<Label Content="Y:" Grid.Column="2" Grid.Row="4" Margin="0,0,3,0" Padding="0"
                   IsEnabled="{Binding Path=enableScaleYZControls}"/>
            <TextBox Margin="3,3,20,3" Grid.Row="4" Grid.Column="3" Style="{StaticResource NumberTextBoxStyle}"
                     IsEnabled="{Binding Path=enableScaleYZControls}"
                     Text="{Binding Path=scaleY, Converter={StaticResource DoubleColorConverter}}"/>
            <Label Content="Z:" Grid.Column="2" Grid.Row="5" Margin="0,0,3,0" Padding="0"
                   IsEnabled="{Binding Path=enableScaleYZControls}"/>
            <TextBox Margin="3,3,20,3" Grid.Row="5" Grid.Column="3" Style="{StaticResource NumberTextBoxStyle}"
                     IsEnabled="{Binding Path=enableScaleYZControls}"
                     Text="{Binding Path=scaleZ, Converter={StaticResource DoubleColorConverter}}"/>

            <Grid Margin="0,0,6,0" Grid.Column="4" Grid.ColumnSpan="2">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <Label Content="Rotation" Style="{StaticResource labelStyle}" />
                <Rectangle Grid.Column="1" Height="1" Margin="0" Stroke="{x:Static SystemColors.ControlDarkBrush}" VerticalAlignment="Center" />
            </Grid>
            <!--<Label Content="Rotation" Grid.Column="4" Grid.ColumnSpan="2" Margin="0" Padding="0,3" />-->
			<CheckBox Content="Prompt" Margin="0" Padding="0" Grid.Row="1" Grid.Column="4" Grid.ColumnSpan="2"
                      IsChecked="{Binding Path=promptRotation}"/>
            <Label Content="Angle:" Grid.Column="4" Grid.Row="3" Margin="0" Padding="0"
                   IsEnabled="{Binding Path=enableRotationControls}"/>
            <TextBox Margin="3,3,0,3" Grid.Row="3" Grid.Column="5" Style="{StaticResource NumberTextBoxStyle}"
                     IsEnabled="{Binding Path=enableRotationControls}"
                     Text="{Binding Path=rotation, Converter={StaticResource DoubleColorConverter}}"/>
        </Grid>
		<Grid Margin="0" Grid.Row="7" Height="Auto">
			<Grid.ColumnDefinitions>
				<ColumnDefinition/>
				<ColumnDefinition Width="Auto"/>
				<ColumnDefinition Width="Auto"/>
				<ColumnDefinition Width="Auto"/>
			</Grid.ColumnDefinitions>
			<Button Content="OK" Name="OKButton" Grid.Column="1" Margin="3" Width="75" Click="OKButton_Click" IsDefault="True"/>
			<Button Content="Cancel" Name="CancelButton" Grid.Column="2" Margin="3" Width="75" Click="CancelButton_Click" IsCancel="True"/>
			<Button Content="Help" Name="HelpButton" Grid.Column="3" Margin="3,3,0,3" Width="75" Click="HelpButton_Click"/>
		</Grid>
	</Grid>
</Window>